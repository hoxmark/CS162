{ val flatAdd = (i: Int) => Cons[Int]((i - 1, Cons[Int]((i, Cons[Int]((i + 1, Nil[Int](unit)))))))
  val list = Cons[Int]((1, Cons[Int]((2, Cons[Int]((3, Nil[Int](unit)))))))
  flatMap[Int, Int](list)(flatAdd)
}
;;;
Cons((0, Cons((1, Cons((2, Cons((1, Cons((2, Cons((3, Cons((2, Cons((3, Cons((4, Nil(unit)))))))))))))))))))
;;;
List[Int]
